package com.jerry.wuwen.ui.camera

import android.app.Activity
import android.app.AlertDialog
import android.content.Intent
import android.graphics.Bitmap
import android.graphics.BitmapFactory
import android.graphics.Color
import android.graphics.Matrix
import android.media.ExifInterface
import android.net.Uri
import android.os.*
import android.provider.MediaStore
import android.text.TextUtils
import android.util.Base64
import android.util.Log
import android.view.View
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import androidx.core.content.FileProvider
import androidx.lifecycle.ViewModelProvider
import com.jerry.wuwen.R
import kotlinx.android.synthetic.main.activity_camera.*
import okhttp3.*
import org.json.JSONArray
import org.json.JSONException
import org.json.JSONObject
import java.io.*
import kotlin.concurrent.thread

/**
 * bitmap转为base64
 * @param bitmap
 * @return
 */
/**
 * 将图片转成byte数组
 *
 * @param bitmap 图片
 * @return 图片的字节数组
 */
fun bitmap2Byte(bitmap: Bitmap): ByteArray? {
    val outputStream = ByteArrayOutputStream()
    //把bitmap100%高质量压缩 到 output对象里
    bitmap.compress(Bitmap.CompressFormat.JPEG, 100, outputStream)
    return outputStream.toByteArray()
}

/**
 * 将图片转成byte数组
 *
 * @param imageByte 图片
 * @return Base64 String
 */
fun byte2Base64(imageByte: ByteArray?): String? {
    return if (null == imageByte) null else Base64.encodeToString(imageByte, Base64.DEFAULT)
}

private fun showExitDialog01(activity: Activity) {
    AlertDialog.Builder(activity)
        .setTitle("提示")
        .setMessage("请打开手机的相机权限")
        .setPositiveButton("确定", null)
        .show()
}
fun bitmapToBase64(bitmap: Bitmap?): String? {
    var result: String? = null
    var baos: ByteArrayOutputStream? = null
    try {
        if (bitmap != null) {
            baos = ByteArrayOutputStream()
            bitmap.compress(Bitmap.CompressFormat.JPEG, 100, baos)
            baos.flush()
            baos.close()
            val bitmapBytes = baos.toByteArray()
            result = Base64.encodeToString(bitmapBytes, Base64.DEFAULT)
        }
    } catch (e: IOException) {
        e.printStackTrace()
    } finally {
        try {
            if (baos != null) {
                baos.flush()
                baos.close()
            }
        } catch (e: IOException) {
            e.printStackTrace()
        }
    }
    return result
}
class CameraActivity : AppCompatActivity() {
    val takephoto=1
    lateinit var imageuri:Uri
    lateinit var outputImage: File
    lateinit var bitmap: Bitmap

    lateinit var handler: Handler
    lateinit var classname: String
    //解析okhttp返回的json格式
    private fun parseJSONWithJSONObject2(jsonData:String){
        try {
            val jsonArray = JSONArray(jsonData)
            for (i in 0 until jsonArray.length()){
                val jsonObject=jsonArray.getJSONObject(i)
                val result_num=jsonObject.getInt("result_num")
                if (result_num==1){
                    val result=jsonObject.getString("result")

                    classname = JSONArray(result).getJSONObject(0).getString("classname")

                    Log.d("识别classname:：",classname.toString())
                }
                else{
                    classname="未识别"
                }
                val msg=Message()
                msg.what=1
                handler.sendMessage(msg)
            }
        }catch (e: java.lang.Exception){
            e.printStackTrace()
            Log.d("失败:：","ssss")
        }
    }



    lateinit var Base64String: String
    lateinit var bitmap64:String
    lateinit var token:String
    //解析okhttp返回的json格式
    private fun parseJSONWithJSONObject(jsonData:String){
        try {
            val jsonArray = JSONArray(jsonData)
            for (i in 0 until jsonArray.length()){
                val jsonObject=jsonArray.getJSONObject(i)
                token = jsonObject.getString("access_token")

                Log.d("token:：",token.toString())
                thread {
                    //拼接发送的json数据
                    val obj = JSONObject()
                    try {
                        obj.put("image","" )
                        Log.d("bitmap64",byte2Base64(bitmap2Byte(bitmap)).toString())
                        Log.d("bitmap", Base64String)
                    } catch (e: JSONException) {
                        e.printStackTrace()
                        Log.d("sssssssssssssssssssss：","失败请求")
                    }
                    val type: MediaType? = MediaType.parse("application/json;charset=utf-8")
                    val RequestBody2: RequestBody = RequestBody.create(type,  obj.toString())
                    val requestBode=FormBody.Builder()
                        .add("image",Base64String)
                        //.add("image","")
                        .build()
                    try {
                        val client= OkHttpClient()
                        val request = Request.Builder()
                            .url("https://aip.baidubce.com/rest/2.0/image-classify/v1/gesture?access_token=${token}")
                            .addHeader("Content-Type","application/x-www-form-urlencoded")
                            .post(requestBode)
                            .build()
                        Log.d("url","https://aip.baidubce.com/rest/2.0/image-classify/v1/gesture?access_token=${token}")
                        val response=client.newCall(request).execute()
                        var responseData = response.body()?.string()
                        if (responseData!=null){
                            responseData="["+responseData+"]"
                            parseJSONWithJSONObject2(responseData!!)
                            Log.d("responseData收到的数据2",responseData!!)

                        }
                    }catch (e: java.lang.Exception){
                        val msg=Message()
                        msg.what=2
                        handler.sendMessage(msg)
                        Log.d("sssssssssssssssss","bitmap2失败")
                        e.printStackTrace()
                    }
                }
            }
        }catch (e: java.lang.Exception){
            e.printStackTrace()
            Log.d("失败:：","ssss")
        }
    }

    override fun onStart() {
        super.onStart()

    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_camera)
        val viewModel by lazy { ViewModelProvider(this).get(CameraViewModel::class.java) }
        showExitDialog01(this)




        //接收各个线程传来的各个更新ui操作

        handler = object: Handler(Looper.getMainLooper()) {
            override fun handleMessage(msg: Message) {
                when (msg.what) {
                    1->{
                        Log.d("进行了更新操作",classname)
                        textView40.setText("识别结果为:${classname}")
                        camera_load_pgb.visibility=View.GONE
                    }
                    2->{
                        Toast.makeText(this@CameraActivity, "无网络链接", Toast.LENGTH_SHORT).show()
                        camera_load_pgb.visibility=View.GONE
                    }
                }
            }
        }


        //使状态栏和背景融合
        val decorView=window.decorView//拿到当前的Activity的DecorView
        decorView.systemUiVisibility= View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN or View.SYSTEM_UI_FLAG_LAYOUT_STABLE//表示Activity的布局会显示到状态栏上面
        window.statusBarColor= Color.TRANSPARENT//最后调用一下statusBarColor()方法将状态栏设置为透明色


        //单帧手语
        button5.setOnClickListener{

            //让识别的默认框结束
            camera_board_img.visibility=View.GONE
            camera_pict_img.visibility=View.GONE



            //创建File对象
            outputImage=File(externalCacheDir,"outpit_image.jpg")
            if(outputImage.exists()){
                outputImage.delete()

            }
            Log.d("路径",outputImage.path)
            outputImage.path
            outputImage.createNewFile()
            imageuri=if(Build.VERSION.SDK_INT>=Build.VERSION_CODES.N){
                FileProvider.getUriForFile(this,"com.jerry.wuwen",outputImage)
            }else{
                Uri.fromFile(outputImage)
            }
            //启动相机程序
            try {
                val intent=Intent("android.media.action.IMAGE_CAPTURE")
                intent.putExtra(MediaStore.EXTRA_OUTPUT,imageuri)
                startActivityForResult(intent,takephoto)
                //显示img
                camera_return_img.visibility=View.VISIBLE
                camera_load_pgb.visibility=View.VISIBLE
            }catch (e:java.lang.Exception){
                Toast.makeText(this, "请打开相机权限", Toast.LENGTH_SHORT).show()
            }

        }










    }

    /**
     * 将图片转换成Base64编码的字符串
     */
    fun imageToBase64(path: String?): String? {
        if (TextUtils.isEmpty(path)) {
            return null
        }
        var `is`: InputStream? = null
        var data: ByteArray? = null
        var result: String? = null
        try {
            `is` = FileInputStream(path)
            //创建一个字符流大小的数组。
            data = ByteArray(`is`.available())
            //写入数组
            `is`.read(data)
            //用默认的编码格式进行编码
            result = Base64.encodeToString(data, Base64.NO_CLOSE)
        } catch (e: Exception) {
            e.printStackTrace()
        } finally {
            if (null != `is`) {
                try {
                    `is`.close()
                } catch (e: IOException) {
                    e.printStackTrace()
                }
            }
        }
        return result
    }
    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
        super.onActivityResult(requestCode, resultCode, data)
        when (requestCode){
            takephoto->{

                if (resultCode==Activity.RESULT_OK){

                    bitmap = BitmapFactory.decodeStream(contentResolver.openInputStream(imageuri))
                    camera_return_img.setImageBitmap(rotatIfRequired(bitmap))

                    Base64String = imageToBase64(outputImage.path).toString()
                    //bitmap64 = camera_return_img.getDrawable().toBitmap()

                    thread {
                        //拼接发送的json数据
                        val obj = JSONObject()
                        try {
                            obj.put("grant_type","client_credentials" )
                            obj.put("client_id", "X0RnU9Q31sc2CpLpLxelMyhe")
                            obj.put("client_secret","GKAtoOlLNlQd8N45SyCojRGntk1dRguh")
                        } catch (e: JSONException) {
                            e.printStackTrace()
                            Log.d("sssssssssssssssssssss：","失败请求")
                        }
                        val type: MediaType? = MediaType.parse("application/json;charset=utf-8")
                        val RequestBody2: RequestBody = RequestBody.create(type, "" + obj.toString())
                        try {
                            val client= OkHttpClient()
                            val request = Request.Builder()
                                .url("https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&client_id=X0RnU9Q31sc2CpLpLxelMyhe&client_secret=GKAtoOlLNlQd8N45SyCojRGntk1dRguh")
                                .build()
                            val response=client.newCall(request).execute()
                            var responseData = response.body()?.string()
                            if (responseData!=null){
                                responseData="["+responseData+"]"
                                parseJSONWithJSONObject(responseData!!)
                                Log.d("responseData收到的数据",responseData!!)

                            }
                        }catch (e: java.lang.Exception){
                            val msg=Message()
                            msg.what=2
                            handler.sendMessage(msg)
                            Log.d("sssssssssssssss","获取token失败")
                            e.printStackTrace()
                        }
                    }
                }
            }
        }
    }
    private fun rotatIfRequired(bitmap: Bitmap):Bitmap{
        val exif = ExifInterface(outputImage.path)
        val orientation=exif.getAttributeInt(ExifInterface.TAG_ORIENTATION,ExifInterface.ORIENTATION_NORMAL)
        return when(orientation){
            ExifInterface.ORIENTATION_ROTATE_90->rotateBitmap(bitmap,90)
            ExifInterface.ORIENTATION_ROTATE_180->rotateBitmap(bitmap,180)
            ExifInterface.ORIENTATION_ROTATE_270->rotateBitmap(bitmap,270)
            else->bitmap
        }
    }
    private fun rotateBitmap(bitmap: Bitmap,degree:Int):Bitmap{
        val matrix=Matrix()
        matrix.postRotate(degree.toFloat())
        val rotatedBitmap=Bitmap.createBitmap(bitmap,0,0,bitmap.width,bitmap.height)
        bitmap.recycle()
        return rotatedBitmap
    }
}
